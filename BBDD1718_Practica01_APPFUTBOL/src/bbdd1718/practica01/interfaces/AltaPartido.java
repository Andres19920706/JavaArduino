/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bbdd1718.practica01.interfaces;


import bbdd1718.practica01.clases.AppFutbol;
import bbdd1718.practica01.clases.Arbitro;
import bbdd1718.practica01.clases.Equipo;
import bbdd1718.practica01.clases.Estadio;
import bbdd1718.practica01.clases.Partido;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Andres
 */
public class AltaPartido extends javax.swing.JFrame {

    /**
     * Creates new form AltaPartido
     */
    public AltaPartido() {
        initComponents();
        
        this.setLocationRelativeTo(null);//centramos.
        this.setTitle("App Futbol -> Nuevo Partido");
        //Inicializamos las listas
            //Lista de arbitros disponibles
        DefaultListModel modeloArbitro = new DefaultListModel(); //Contendor
        for (Map.Entry<Integer, Arbitro> entry : AppFutbol.lArbitros.entrySet()) {
            modeloArbitro.addElement(entry.getKey()+": "+entry.getValue().nombre+"-> "+entry.getValue().getTipo()); //modelo.addElement(ju.nombre);
        }
        this.jListArbitros.setModel(modeloArbitro); //Lo añaddimos al jList de Arbitros
        
            //Lista de equipos disponibles
        DefaultListModel modeloEquipo = new DefaultListModel(); //Contendor
        for (Map.Entry<Integer, Equipo> entry : AppFutbol.lEquipos.entrySet()) {
            modeloEquipo.addElement(entry.getKey()+": "+entry.getValue().getNameEquipo()); //modelo.addElement(ju.nombre);
        }
        this.jListEquipos.setModel(modeloEquipo); //Lo añaddimos al jList de Arbitros
        
            //Lista de estadios
            this.jComboBoxEstadio.addItem("Seleccione estadio");
            for(Estadio es : AppFutbol.lEstadios.values()){
                this.jComboBoxEstadio.addItem(es.getIdEstadio()+": " + es.getCiudad());//Lo añaddimos al jList de Arbitros
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitulo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        labelSubTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListArbitros = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListEquipos = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldGolesEquipoA = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldGolesEquipoB = new javax.swing.JTextField();
        jButtonAcceptar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonMenu = new javax.swing.JButton();
        jComboBoxEstadio = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelTitulo.setText("App Futbol Menu");

        labelSubTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSubTitulo.setText("Alta Partido");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Id:");

        jTextFieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Fecha:");

        jRadioButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton.setText("Ida");
        jRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Lista de Arbitros:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Lista de Equipos:");

        jListArbitros.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListArbitros.setToolTipText("ID - NOMBRE - POSICION");
        jScrollPane1.setViewportView(jListArbitros);

        jListEquipos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListEquipos.setToolTipText("ID - NOMBRE");
        jScrollPane2.setViewportView(jListEquipos);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Goles Equipo A:");

        jTextFieldGolesEquipoA.setToolTipText("Goles del equipo local");
        jTextFieldGolesEquipoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGolesEquipoAActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Goles Equipo B:");

        jTextFieldGolesEquipoB.setToolTipText("Goles del equipo visitante");
        jTextFieldGolesEquipoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGolesEquipoBActionPerformed(evt);
            }
        });

        jButtonAcceptar.setText("Acetar");
        jButtonAcceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAcceptarMouseClicked(evt);
            }
        });
        jButtonAcceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLimpiarMouseClicked(evt);
            }
        });

        jButtonMenu.setText("Menu");
        jButtonMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMenuMouseClicked(evt);
            }
        });

        jComboBoxEstadio.setToolTipText("ID - CIUDAD");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Estadio:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelSubTitulo)
                .addGap(157, 157, 157))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(labelTitulo))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jRadioButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jComboBoxEstadio, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextFieldGolesEquipoB))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextFieldGolesEquipoA, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAcceptar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonLimpiar))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMenu)
                                .addGap(45, 45, 45)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSubTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jRadioButton)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEstadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldGolesEquipoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAcceptar)
                    .addComponent(jButtonLimpiar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldGolesEquipoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMenu))
                .addContainerGap())
        );

        jTextFieldGolesEquipoA.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdActionPerformed

    private void jRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonActionPerformed

    private void jTextFieldGolesEquipoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGolesEquipoAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGolesEquipoAActionPerformed

    private void jTextFieldGolesEquipoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGolesEquipoBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGolesEquipoBActionPerformed

    private void jButtonAcceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAcceptarActionPerformed

    private void jButtonMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMenuMouseClicked
        // Voler al menu
        this.dispose(); //Cerramos la ventana acutal.
        AppFutbol.iu.setVisible(true);//Mostramos el menu.
    }//GEN-LAST:event_jButtonMenuMouseClicked

    private void jButtonLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLimpiarMouseClicked
        // Restablecemos los valores por defecto
        this.jDateChooser.setCalendar(null);
        this.jListArbitros.removeSelectionInterval(0, AppFutbol.lArbitros.size());
        this.jListEquipos.removeSelectionInterval(0,AppFutbol.lEquipos.size());
        this.jTextFieldGolesEquipoA.setText("");
        this.jTextFieldGolesEquipoB.setText("");
        this.jTextFieldId.setText("");
        this.jRadioButton.setSelected(false);
        this.jComboBoxEstadio.setSelectedIndex(0);
                
        
    }//GEN-LAST:event_jButtonLimpiarMouseClicked

    private void jButtonAcceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAcceptarMouseClicked
        // Comprobamos los datos antes de dar de alta al partido
        final String[] MSG = {"Datos Incompletos","Datos de tipo numerico erroneos",
            "Numero de arbitros seleccionado incorrecto","No puede haber dos arbitros princiaples en un mismo partido",
            "No hay arbitro principal en el partido","Numero de equipos seleccionado incorrecto","Los datos numericos han de ser postivos",
            "Identficador del partido ocupado"};
        
        //1) Comprobamos si los campos de datos estan vacios
        if(this.jTextFieldId.getText().equals("") || this.jListArbitros.getSelectedValue()==null
            || this.jListEquipos.getSelectedIndex()==-1 || this.jDateChooser.getDate() == null
            || this.jTextFieldGolesEquipoA.getText().equals("") || this.jTextFieldGolesEquipoB.getText().equals("") ||
                this.jComboBoxEstadio.getSelectedIndex() == 0){//Datos incomplentos
            JOptionPane.showMessageDialog(null, MSG[0],
                    "AppFutbol",JOptionPane.ERROR_MESSAGE);
        }else{//Los campos de datos introducidos no estan vacios
            //2) Extraemos los datos introducidos.
                
            int idPartido; //Identificador del partido
            int golesA; //Goles del equipo A
            int golesB; //Goles del equipo B
            Boolean ida; //true -> si es partido de ida
            String fecha; //fecha del partido dia/mes/año
            ArrayList<Arbitro> arbitrosPartido = new ArrayList<>(); //Lista de arbitros en el partido
            Equipo eq1 = null,eq2 = null; //Equipos del partido
            Estadio estadio;
            int i = 0,j = 0;
            Boolean principal = false;
            Boolean errorPosiciones = false;
            try{
                //2.1) Obtenemos los datos que han de ser de tipo numerio
                idPartido = Integer.parseInt(this.jTextFieldId.getText());
                golesA = Integer.parseInt(this.jTextFieldGolesEquipoA.getText());
                golesB = Integer.parseInt(this.jTextFieldGolesEquipoB.getText());
                    //2.1.1) Comprobamos que los datos numericos no sean negativos
                if(idPartido<0 || golesA<0 || golesB<0){//Son negativos
                    JOptionPane.showMessageDialog(null, MSG[6],
                        "AppFutbol",JOptionPane.ERROR_MESSAGE);
                }else{//Son positivos
                    //2.1.2) Comprobamos que el identificador del partido no este ocupado
                    if(AppFutbol.lPartidos.get(idPartido)==null){
                //2.2) Obtenemos la fecha del partido con el formato dia/mes/año
                        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yy");
                        fecha = formato.format(this.jDateChooser.getDate());

                //2.3) Obtenemos si es partido de ida o de vuelta
                        ida = this.jRadioButton.isSelected();

                //2.4) Estraemos los arbitros
                        ArrayList numeroArbitrosSelec = null;
                        numeroArbitrosSelec = (ArrayList) this.jListArbitros.getSelectedValuesList(); //Arbitos seleccionados
                        //2.4.1) Comprobamos el numero de arbitros seleccionado
                                //Como mínimo un principal y un asistente, pero puede haber varios asistentes en un partido
                        if(numeroArbitrosSelec.size()>=AppFutbol.posicionesArbitro.length){//Numero de arbitros sellecionados correcto
                            //2.4.1.2) Comprobamos que las posiciones de los arbitros no se repitan
                            principal = false;
                            errorPosiciones = false;
                            i=0;

                            while(i<numeroArbitrosSelec.size() && !errorPosiciones){
                                String[] pivoteArbitros = numeroArbitrosSelec.get(i).toString().split(":");
                                int keyArbitros = Integer.parseInt(pivoteArbitros[0]);
                                //2.4.1.2.a) Comprobamos si el arbitro es principal
                                if(AppFutbol.lArbitros.get(keyArbitros).getTipo().equals(AppFutbol.posicionesArbitro[0])){//El arbitro es de tipo principal
                                    //2.4.1.2.a.i) Comprobamos si ya hay un arbitro es principal
                                    if(principal){//Ya hay un arbritro principal
                                        JOptionPane.showMessageDialog(null, MSG[3],
                                            "AppFutbol",JOptionPane.ERROR_MESSAGE);   
                                        errorPosiciones = true; //Condicion para salir del bucle
                                    }else{
                                        arbitrosPartido.add(AppFutbol.lArbitros.get(keyArbitros)); //Lo añadimos
                                        principal = true;
                                        i++;
                                    }
                                }else{//El arbitro no es de tipo principal
                                    arbitrosPartido.add(AppFutbol.lArbitros.get(keyArbitros)); //Lo añadimos
                                    i++;
                                }
                            }

                //2.5) Estraemos los equipos, si no se produjo error alguno al extraer los arbitros
                    //2.5.1) Comprobamos que en el partido haya un arbitro principal
                            if(!errorPosiciones && principal){//Hay arbitro principal en el partido
                        //2.5.1.a) Comprobamos el numero de equipos seleccionado
                                    //Solo puede seleccionar dos
                                ArrayList numeroEquiposSelec = null;
                                numeroEquiposSelec = (ArrayList) this.jListEquipos.getSelectedValuesList(); //Arbitos seleccionados
                                if(numeroEquiposSelec.size()==2){//El numero de equipos seleccioando correcto
                                    i=0;
                                    while(i<2){
                                        String[] pivoteEquipos = numeroArbitrosSelec.get(i).toString().split(":");
                                        int keyEquipos = Integer.parseInt(pivoteEquipos[0]);
                                        if(i==0){//Es el equipo 1
                                            eq1 = AppFutbol.lEquipos.get(keyEquipos); //
                                        }else{//Es el equipo 2
                                            eq2 = AppFutbol.lEquipos.get(keyEquipos);
                                        }
                                        i++;
                                    }
                //2.6)  Extraemos el estadio del partido

                                    String [] keyStringEstadio = ((String) this.jComboBoxEstadio.getSelectedItem()).split(":"); //Valor del jlistEstadios
                                    int keyIntEstadio = Integer.parseInt(keyStringEstadio[0]); //Identificador del estadio

                                    estadio = AppFutbol.lEstadios.get(keyIntEstadio); //Añadimos el esteadio al equipo

                //2.7) Damos de alta el partido

                                    Partido p = new Partido(idPartido,golesA,golesB,ida,fecha,estadio,arbitrosPartido,eq1,eq2);
                                    AppFutbol.AltaPartido(p);
                                    this.dispose();
                                    AppFutbol.iu.setVisible(true);

                                }else{//El numero de equipos seleccioando erroneo
                                    JOptionPane.showMessageDialog(null, MSG[5],
                                    "AppFutbol",JOptionPane.ERROR_MESSAGE); 
                                }
                            }else{//No hay arbitro principal en el partido
                                JOptionPane.showMessageDialog(null, MSG[4],
                                    "AppFutbol",JOptionPane.ERROR_MESSAGE); 
                            }

                        }else{//Numero de arbitros seleccionados erroneo
                            JOptionPane.showMessageDialog(null, MSG[2]+" El numero de arbitros por partido ha de ser >= "+AppFutbol.posicionesArbitro.length,
                                "AppFutbol",JOptionPane.ERROR_MESSAGE);                    
                        }
                    }else{//Se repite el id del partido
                        JOptionPane.showMessageDialog(null, MSG[7],
                        "AppFutbol",JOptionPane.ERROR_MESSAGE);
                    }//Fin del if-esle que comprueba si el id esta ocupado
                }//Fin del if-else que comprueba si los numero son negativos
                 
            }catch(NumberFormatException e){//Se produjo un error en los datos de tipo numérico
                JOptionPane.showMessageDialog(null, MSG[1],
                    "AppFutbol",JOptionPane.ERROR_MESSAGE);
            }

                
        }
        
    }//GEN-LAST:event_jButtonAcceptarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaPartido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAcceptar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JComboBox<String> jComboBoxEstadio;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jListArbitros;
    private javax.swing.JList<String> jListEquipos;
    private javax.swing.JRadioButton jRadioButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldGolesEquipoA;
    private javax.swing.JTextField jTextFieldGolesEquipoB;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JLabel labelSubTitulo;
    private javax.swing.JLabel labelTitulo;
    // End of variables declaration//GEN-END:variables
}
